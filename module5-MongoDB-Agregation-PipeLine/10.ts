// ‡¶†‡¶ø‡¶ï ‡¶Ü‡¶õ‡ßá ‚Äî ‡¶è‡¶¨‡¶æ‡¶∞ ‡¶Ü‡¶Æ‡¶ø ‡¶§‡ßã‡¶Æ‡¶æ‡¶ï‡ßá **Compound Index** ‡¶Ü‡¶∞ **Text Index** MongoDB ‡¶§‡ßá ‡¶¨‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶∞‡¶ø‡¶§‡¶≠‡¶æ‡¶¨‡ßá ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶Ø‡¶º ‡¶¨‡ßÅ‡¶ù‡¶ø‡¶Ø‡¶º‡ßá ‡¶¶‡¶ø‡¶ö‡ßç‡¶õ‡¶ø‡•§

// ---

// ## 1Ô∏è‚É£ Compound Index

// üìå **Definition:**
// Compound index ‡¶π‡¶≤‡ßã ‡¶è‡¶Æ‡¶® index ‡¶Ø‡¶æ **‡¶è‡¶ï‡¶æ‡¶ß‡¶ø‡¶ï field** ‡¶®‡¶ø‡ßü‡ßá ‡¶§‡ßà‡¶∞‡¶ø ‡¶π‡ßü, ‡¶Ø‡¶æ‡¶§‡ßá MongoDB ‡¶è‡¶ï‡¶∏‡¶æ‡¶•‡ßá ‡¶è‡¶ï‡¶æ‡¶ß‡¶ø‡¶ï field ‡¶è‡¶∞ ‡¶â‡¶™‡¶∞ ‡¶¶‡ßç‡¶∞‡ßÅ‡¶§ search ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá‡•§

// ---

// ### Example:

// ```js
// db.users.createIndex({ age: 1, name: 1 })
// ```

// * ‡¶è‡¶ñ‡¶æ‡¶®‡ßá **age** ‡¶™‡ßç‡¶∞‡¶•‡¶Æ field (prefix), **name** ‡¶¶‡ßç‡¶¨‡¶ø‡¶§‡ßÄ‡ßü field‡•§
// * Index order ‡¶ó‡ßÅ‡¶∞‡ßÅ‡¶§‡ßç‡¶¨‡¶™‡ßÇ‡¶∞‡ßç‡¶£ (‡ßß ‡¶Æ‡¶æ‡¶®‡ßá ascending, -‡ßß ‡¶Æ‡¶æ‡¶®‡ßá descending)‡•§

// ---

// ### ‡¶ï‡¶ø‡¶≠‡¶æ‡¶¨‡ßá ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡ßá?

// ‡¶è‡¶á index **query optimization** ‡¶ï‡¶∞‡¶¨‡ßá ‡¶Ø‡¶ñ‡¶®:

// * ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶∂‡ßÅ‡¶ß‡ßÅ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ **age** ‡¶¶‡¶ø‡ßü‡ßá search ‡¶ï‡¶∞‡ßã
// * **age** + **name** ‡¶¶‡¶ø‡ßü‡ßá search ‡¶ï‡¶∞‡ßã
// * **age** ‡¶¶‡¶ø‡ßü‡ßá filter ‡¶ï‡¶∞‡ßá name ‡¶¶‡¶ø‡ßü‡ßá sort ‡¶ï‡¶∞‡ßã

// üìå ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ ‡¶∂‡ßÅ‡¶ß‡ßÅ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ **name** ‡¶¶‡¶ø‡ßü‡ßá search ‡¶ï‡¶∞‡¶≤‡ßá index ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶π‡¶¨‡ßá ‡¶®‡¶æ (‡¶ï‡¶æ‡¶∞‡¶£ age ‡¶π‡¶ö‡ßç‡¶õ‡ßá prefix)‡•§

// ---

// ### Usage Example:

// ```js
// // Works with index
// db.users.find({ age: 25 })
// db.users.find({ age: 25, name: "John" })
// db.users.find({ age: 25 }).sort({ name: 1 })

// // Won't use index (name only)
// db.users.find({ name: "John" })
// ```

// ---

// ### Pros:

// ‚úÖ Multiple fields search faster
// ‚úÖ Sorting optimization

// ### Cons:

// ‚ö† Index order ‡¶ñ‡ßÅ‡¶¨ ‡¶ó‡ßÅ‡¶∞‡ßÅ‡¶§‡ßç‡¶¨‡¶™‡ßÇ‡¶∞‡ßç‡¶£
// ‚ö† ‡¶¨‡ßá‡¶∂‡¶ø compound index ‡¶¶‡¶ø‡¶≤‡ßá storage ‡¶¨‡ßá‡¶∂‡¶ø ‡¶≤‡¶æ‡¶ó‡ßá

// ---

// ## 2Ô∏è‚É£ Text Index

// üìå **Definition:**
// Text index MongoDB ‡¶§‡ßá **full-text search** ‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡ßÉ‡¶§ ‡¶π‡ßü ‚Äî ‡¶Ø‡ßá‡¶Æ‡¶® ‡¶®‡¶ø‡¶∞‡ßç‡¶¶‡¶ø‡¶∑‡ßç‡¶ü ‡¶∂‡¶¨‡ßç‡¶¶, ‡¶¨‡¶æ‡¶ï‡ßç‡¶Ø, ‡¶¨‡¶æ keyword search‡•§

// ---

// ### Example:

// ```js
// db.articles.createIndex({ title: "text", content: "text" })
// ```

// ‡¶è‡¶§‡ßá MongoDB **title** ‡¶ì **content** ‡¶¶‡ßÅ‡¶á field ‡¶è text search ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶¨‡ßá‡•§

// ---

// ### Search Query:

// ```js
// db.articles.find({ $text: { $search: "mongodb indexing" } })
// ```

// * `$search` ‡¶è‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá word ‡¶¶‡¶ø‡¶≤‡ßá MongoDB ‡¶∏‡ßá‡¶á ‡¶∂‡¶¨‡ßç‡¶¶ match ‡¶ï‡¶∞‡¶¨‡ßá‡•§
// * Multiple word ‡¶¶‡¶ø‡¶≤‡ßá OR search ‡¶π‡¶¨‡ßá (‡¶Ø‡¶¶‡¶ø `""` ‡¶®‡¶æ ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶π‡ßü)‡•§
// * Phrase search ‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø:

// ```js
// db.articles.find({ $text: { $search: "\"mongodb indexing\"" } })
// ```

// ---

// ### Relevance Score:

// MongoDB text search result ‡¶ï‡ßá relevance ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡ßü‡ßÄ rank ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá:

// ```js
// db.articles.find(
//   { $text: { $search: "mongodb indexing" } },
//   { score: { $meta: "textScore" } }
// ).sort({ score: { $meta: "textScore" } })
// ```

// ---

// ### Pros:

// ‚úÖ Full-text search support
// ‚úÖ Multiple fields search ‡¶è‡¶ï index ‡¶è

// ### Cons:

// ‚ö† Only one text index per collection allowed
// ‚ö† Complex ranking control limited

// ---

// üí° Pro Tip:

// * ‡¶Ø‡¶¶‡¶ø ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ query **multi-field exact match** ‚Üí Compound index
// * ‡¶Ø‡¶¶‡¶ø query **keyword or phrase search** ‚Üí Text index

// ---

// ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶ö‡¶æ‡¶á‡¶≤‡ßá ‡¶Ü‡¶Æ‡¶ø ‡¶è‡¶ñ‡¶®‡¶á ‡¶§‡ßã‡¶Æ‡¶æ‡¶ï‡ßá **compound index vs text index performance comparison** live example ‡¶¶‡¶ø‡ßü‡ßá ‡¶¶‡ßá‡¶ñ‡¶ø‡ßü‡ßá ‡¶¶‡¶ø‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶ø, ‡¶Ø‡¶æ‡¶§‡ßá speed difference ‡¶™‡¶∞‡¶ø‡¶∑‡ßç‡¶ï‡¶æ‡¶∞ ‡¶π‡ßü‡ßá ‡¶Ø‡¶æ‡¶¨‡ßá‡•§
// ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶ï‡¶ø ‡¶ö‡¶æ‡¶ì ‡¶Ü‡¶Æ‡¶ø ‡¶∏‡ßá‡¶ü‡¶æ ‡¶ï‡¶∞‡¶ø?


// db.test.createIndex({"education.institute":"text"})
    
    // db.test.find({$text: { $search: "Guangxi" }})